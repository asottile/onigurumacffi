#!/usr/bin/env python3
from __future__ import annotations

import argparse
import os
import shutil
import subprocess

DOCKERFILE_FMT = '''\
FROM {base}
RUN : \
    && ONIGURUMA_CLONE="$PWD/oniguruma" \
    && {clone} \
    && ./autogen.sh && ./configure && make -j4 install \
    && rm -rf "$ONIGURUMA_CLONE"
'''
PROG = '''\
{py_bin}/pip wheel --wheel-dir /work --no-deps onigurumacffi=={version} &&
auditwheel repair --wheel-dir /dist /work/*.whl &&
find /dist/ -name '*.whl' -print0 | xargs -n1 -0 --verbose unzip -l
'''


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument('version')
    args = parser.parse_args()

    img = 'onigurumacffi-build'
    base = 'quay.io/pypa/manylinux2010_x86_64'

    with open(os.path.join(os.path.dirname(__file__), 'clone-oniguruma')) as f:
        clone = ' && '.join(f.read().splitlines()[3:])
    dockerfile = DOCKERFILE_FMT.format(base=base, clone=clone).encode()

    cmd = ('docker', 'build', '-t', img, '-')
    subprocess.run(cmd, input=dockerfile, check=True)

    shutil.rmtree('dist', ignore_errors=True)
    os.makedirs('dist', exist_ok=True)

    for py_bin in (
        '/opt/python/cp37-cp37m/bin',
        '/opt/python/pp37-pypy37_pp73/bin',
        '/opt/python/pp38-pypy38_pp73/bin',
    ):
        prog = PROG.format(py_bin=py_bin, version=args.version)
        if subprocess.call((
                'docker', 'run',
                '--volume', f'{os.path.abspath("dist")}:/dist:rw',
                '--rm', '-ti', img, 'bash', '-euxc', prog,
        )):
            return 1
    else:
        return 0


if __name__ == '__main__':
    raise SystemExit(main())
